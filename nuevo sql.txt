CREATE TABLE tipo_usuario (
  id_tipo_usuario NUMBER(1) NOT NULL,
  descripcion VARCHAR2(15) NOT NULL,
  PRIMARY KEY(id_tipo_usuario)
);

CREATE TABLE sexo (
  id_sexo NUMBER(1) NOT NULL,
  descripcion VARCHAR2(15) NULL,
  PRIMARY KEY(id_sexo)
);

CREATE TABLE alumnos (
  id_alumno NUMBER(5) NOT NULL,
  rfc_alumno varchar2(40) not null,
  sexo_id_sexo NUMBER(1) NOT NULL,
  nombre VARCHAR2(15) not NULL,
  paterno VARCHAR2(15) not NULL,
  materno VARCHAR2(15) not NULL,
  fecha_nacimiento DATE not NULL,
  telefono VARCHAR2(15) not NULL,
  direccion VARCHAR2(50) not NULL,
  PRIMARY KEY(id_alumno,rfc_alumno),
  constraint fk_alu_sexo foreign key(sexo_id_sexo)references sexo(id_sexo)
);

CREATE TABLE usuarios (
  id_usuario NUMBER(5) NOT NULL,
  tipo_usuario_id_tipo_usuario NUMBER(1) NOT NULL,
  sexo_id_sexo NUMBER(1) NOT NULL,
  nombre VARCHAR2(15) NOT NULL,
  paterno VARCHAR2(15) NOT NULL,
  materno VARCHAR2(15) NOT NULL,
  fecha_nacimiento DATE NOT NULL,
  telefono VARCHAR2(15) NOT NULL,
  direccion VARCHAR2(50) NOT NULL,
  rfc VARCHAR2(50) NOT NULL,
  contrasena VARCHAR2(30) NOT NULL,
  PRIMARY KEY(id_usuario,RFC),
  constraint fk_user_sexo foreign key(sexo_id_sexo)references sexo(id_sexo),
  constraint fk_user_tuser foreign key(tipo_usuario_id_tipo_usuario)references tipo_usuario(id_tipo_usuario)
);

CREATE TABLE salones (
  id_salon NUMBER(2) NOT NULL,
  descripcion VARCHAR2(15) NOT NULL,
  PRIMARY KEY(id_salon)
);

CREATE TABLE niveles (
  id_nivel NUMBER(2) NOT NULL,
  descripcion VARCHAR2(15) NOT NULL,
  PRIMARY KEY(id_nivel)
);

CREATE TABLE lecciones (
  id_leccion NUMBER(2) NOT NULL,
  niveles_id_nivel NUMBER(2) NOT NULL,
  descripcion VARCHAR2(30) NULL,
  PRIMARY KEY(id_leccion),
  constraint fk_niveles_lecc foreign key(niveles_id_nivel)references niveles(id_nivel)
);

CREATE TABLE tipo_clase (
  id_clase NUMBER(1) NOT NULL,
  descripcion VARCHAR2(20) NOT NULL,
  PRIMARY KEY(id_clase)
);

CREATE TABLE calificaciones (
  id_calificacion NUMBER(5) NOT NULL,
  RFC_ALUMNO_CALIF VARCHAR2(40),
  RFC_MAES_CALIF  VARCHAR2(50),
  tipo_clase_id_clase NUMBER(1) NOT NULL,
  lecciones_id_leccion NUMBER(2) NOT NULL,
  alumnos_id_alumno NUMBER(5) NOT NULL,
  usuarios_id_maestro NUMBER(5) NOT NULL,
  calificacion NUMBER(2) NOT NULL,
  fechaCalif Date,
  PRIMARY KEY(alumnos_id_alumno,tipo_clase_id_clase,lecciones_id_leccion),
  constraint fk_califi_tipo_clase foreign key(tipo_clase_id_clase)references tipo_clase(id_clase),
  constraint fk_califi_leccion foreign key(lecciones_id_leccion)references lecciones(id_leccion),
  constraint fk_califi_alumno foreign key(alumnos_id_alumno,RFC_ALUMNO_CALIF)references alumnos(id_alumno,RFC_ALUMNO),
  constraint fk_califi_user foreign key(usuarios_id_maestro,RFC_MAES_CALIF)references usuarios(id_usuario,RFC)
);

CREATE TABLE horarios (
  id_horario number(20) NOT NULL,
  tipo_clase_id_clase NUMBER(1) NOT NULL,
  lecciones_id_leccion NUMBER(2) NOT NULL,
  usuarios_id_maestro NUMBER(5) NOT NULL,
  alumnos_id_alumno NUMBER(5) NOT NULL,
  salones_id_salon NUMBER(2) NOT NULL,
  RFC_ALUMNO_HORARIO VARCHAR2(40),
  RFC_MAES_HORARIO  VARCHAR2(50),
  fecha DATE NOT NULL,
  hora varchar2(10) not null,
  PRIMARY KEY(alumnos_id_alumno,hora,fecha),
  constraint fk_hoarario_tipo_clase foreign key(tipo_clase_id_clase)references tipo_clase(id_clase),
  constraint fk_horario_leccion foreign key(lecciones_id_leccion)references lecciones(id_leccion),
  constraint fk_horario_alumnoo foreign key(alumnos_id_alumno,RFC_ALUMNO_HORARIO)references alumnos(id_alumno,RFC_ALUMNO),
  constraint fk_horario_user foreign key(usuarios_id_maestro,RFC_MAES_HORARIO)references usuarios(id_usuario,RFC)
);


create or replace procedure insertar_horario
(HTIPO_CLASE_ID_CLASE numeric,HLECCIONES_ID_LECCION numeric,HUSUARIOS_ID_MAESTRO NUMERIC,HALUMNOS_ID_ALUMNO NUMERIC,HSALONES_ID_SALON NUMERIC,HRFC_ALUMNO_HORARIO varchar2, HRFC_MAES_HORARIO varchar2,HFECHA Date,HHORA varchar2)
as
begin
      insert into horarios(TIPO_CLASE_ID_CLASE,LECCIONES_ID_LECCION,USUARIOS_ID_MAESTRO,ALUMNOS_ID_ALUMNO,SALONES_ID_SALON,RFC_ALUMNO_HORARIO,RFC_MAES_HORARIO,FECHA,HORA) 
      values(HTIPO_CLASE_ID_CLASE,HLECCIONES_ID_LECCION,HUSUARIOS_ID_MAESTRO,HALUMNOS_ID_ALUMNO,HSALONES_ID_SALON,lower(HRFC_ALUMNO_HORARIO),lower(HRFC_MAES_HORARIO),HFECHA,HHORA);
end insertar_horario;
/

create or replace procedure insertar_calificacion
(CRFC_ALUMNO_CALIF varchar2, CRFC_MAES_CALIF varchar2,CTIPO_CLASE_ID_CLASE numeric,CLECCIONES_ID_LECCION numeric,CALUMNOS_ID_ALUMNO NUMERIC,CUSUARIOS_ID_MAESTRO NUMERIC,CCALIFICACION NUMERIC,CFECHACALIF Date)
as
begin
      insert into calificaciones(RFC_ALUMNO_CALIF,RFC_MAES_CALIF,TIPO_CLASE_ID_CLASE,LECCIONES_ID_LECCION,ALUMNOS_ID_ALUMNO,USUARIOS_ID_MAESTRO,CALIFICACION,FECHACALIF) 
      values(lower(CRFC_ALUMNO_CALIF),lower(CRFC_MAES_CALIF),CTIPO_CLASE_ID_CLASE,CLECCIONES_ID_LECCION,CALUMNOS_ID_ALUMNO,CUSUARIOS_ID_MAESTRO,CCALIFICACION,CFECHACALIF);
end insertar_calificacion;
/

CREATE SEQUENCE seq_user_id_user
START WITH 1
INCREMENT BY 1 
NOMAXVALUE; 

CREATE SEQUENCE seq_user_id_nivel START WITH 1
 INCREMENT BY 1 
NOMAXVALUE; 

CREATE SEQUENCE seq_id_leccion START WITH 1
 INCREMENT BY 1 
NOMAXVALUE; 

CREATE SEQUENCE seq_id_salon START WITH 1
 INCREMENT BY 1 
NOMAXVALUE; 


CREATE SEQUENCE seq_id_catalogo START WITH 1
 INCREMENT BY 1 
NOMAXVALUE; 


CREATE SEQUENCE seq_alum_id_alum START WITH 1 INCREMENT BY 1 NOMAXVALUE; 

CREATE SEQUENCE seq_user_id_horario
START WITH 1
INCREMENT BY 1 
NOMAXVALUE; 

CREATE SEQUENCE seq_id_calif START WITH 1
 INCREMENT BY 1 
NOMAXVALUE; 

create or replace trigger alumno_triger_auto
before insert on alumnos
for each row
begin
select seq_alum_id_alum.nextval
into:new.id_alumno
from dual;
end;

create or replace trigger usuarios_triger_auto
before insert on usuarios
for each row
begin
select seq_user_id_user.nextval
into:new.ID_USUARIO
from dual;
end;

create or replace trigger nivel_triger_auto
before insert on niveles
for each row
begin
select seq_user_id_nivel.nextval
into:new.id_nivel
from dual;
end;

create or replace trigger leccion_triger_auto
before insert on lecciones
for each row
begin
select seq_id_leccion.nextval
into:new.id_leccion
from dual;
end;

create or replace trigger salon_triger_auto
before insert on salones
for each row
begin
select seq_id_salon.nextval
into:new.id_salon
from dual;
end;

create or replace trigger catalogo_triger_auto
before insert on tipo_clase
for each row
begin
select seq_id_catalogo.nextval
into:new.id_clase
from dual;
end;

create or replace trigger horario_triger_auto
before insert on horarios
for each row
begin
select seq_user_id_horario.nextval
into:new.id_horario
from dual;
end;

create or replace trigger calif_triger_auto
before insert on calificaciones
for each row
begin
select seq_id_calif.nextval
into:new.ID_CALIFICACION
from dual;
end;
/

create or replace procedure insertar_usuario
(usuario_id_tipo_usuario numeric,usuario_id_genero numeric,usuario_nombre varchar2,usuario_paterno varchar2,usuario_materno varchar2,usuario_fecha_na Date,usuario_telefono varchar2,usuario_direccion varchar2,usuario_rfc varchar2,usuario_contrasena varchar2)
as
begin
      insert into usuarios(TIPO_USUARIO_ID_TIPO_USUARIO,SEXO_ID_SEXO,nombre,paterno,materno,FECHA_NACIMIENTO,telefono,direccion,rfc,contrasena) 
      values(usuario_id_tipo_usuario,usuario_id_genero,lower(usuario_nombre),lower(usuario_paterno),lower(usuario_materno),usuario_fecha_na,usuario_telefono,usuario_direccion,lower(usuario_rfc),usuario_contrasena);
end insertar_usuario;
/

create or replace procedure insertar_alumno
(alumno_rfc varchar2,alumno_sexo numeric,alumno_nombre varchar2,alumno_paterno varchar2,alumno_materno varchar2,alumno_fecha_na Date,alumno_telefono varchar2,alumno_direccion varchar2)
as
begin
      insert into alumnos(RFC_ALUMNO,SEXO_ID_SEXO,NOMBRE,PATERNO,MATERNO,FECHA_NACIMIENTO,TELEFONO,DIRECCION) 
      values(alumno_rfc,alumno_sexo,lower(alumno_nombre),lower(alumno_paterno),lower(alumno_materno),alumno_fecha_na,alumno_telefono,alumno_direccion);
end insertar_alumno;
/

create or replace procedure insertar_nivel
(nivel_descripcion varchar2)
as
begin
      insert into niveles(descripcion) 
      values(lower(nivel_descripcion));
end insertar_nivel;
/


create or replace procedure insertar_leccion
(leccion_nivel numeric,leccion_descripcion varchar2)
as
begin
      insert into lecciones(niveles_id_nivel,descripcion) 
      values(leccion_nivel,lower(leccion_descripcion));
end insertar_leccion;
/

create or replace procedure insertar_salon
(salon_descripcion varchar2)
as
begin
      insert into salones(descripcion) 
      values(lower(salon_descripcion));
end insertar_salon;
/


create or replace procedure insertar_catalogo
(catalogo_descripcion varchar2)
as
begin
      insert into tipo_clase(descripcion) 
      values(lower(catalogo_descripcion));
end insertar_catalogo;
/



CREATE OR REPLACE PROCEDURE  ACTUALIZAUSUARIOS (id_usuario_in numeric,usuario_id_tipo_usuario numeric,usuario_id_genero numeric,NOMBREIN varchar2,PATERNOIN varchar2,MATERNOIN varchar2,usuario_fecha_na Date,usuario_telefono varchar2,usuario_direccion varchar2,usuario_rfc varchar2,usuario_contrasena varchar2)
as
begin
update USUARIOS set TIPO_USUARIO_ID_TIPO_USUARIO = usuario_id_tipo_usuario,SEXO_ID_SEXO = usuario_id_genero,nombre = lower(nombrein),paterno=lower(PATERNOIN),MATERNO=lower(MATERNOIN),FECHA_NACIMIENTO = usuario_fecha_na, telefono = usuario_telefono, direccion = usuario_direccion,rfc = usuario_rfc, contrasena = usuario_contrasena
where(ID_USUARIO)=id_usuario_in;
end ACTUALIZAUSUARIOS;
/

CREATE OR REPLACE PROCEDURE  ACTUALIZANIVELES (id_nivel_in numeric,nivel_descripcion varchar2)
as 
begin 
update NIVELES set descripcion = nivel_descripcion 
where(ID_NIVEL)=id_nivel_in; 
end ACTUALIZANIVELES;
/

CREATE OR REPLACE PROCEDURE  ACTUALIZASALONES (id_salon_in numeric,salon_descripcion varchar2)
as 
begin 
update SALONES set descripcion = salon_descripcion 
where(ID_SALON)=id_salon_in; 
end ACTUALIZASALONES;
/

CREATE OR REPLACE PROCEDURE  ACTUALIZALECCIONES (id_leccion_in numeric,leccion_id_nivel numeric,leccion_descripcion varchar2)
as 
begin 
update LECCIONES set NIVELES_ID_NIVEL = leccion_id_nivel,descripcion = leccion_descripcion
where(ID_LECCION)=id_leccion_in; 
end ACTUALIZALECCIONES;	
/


CREATE OR REPLACE PROCEDURE  ACTUALIZACATALOGO (id_catalogo_in numeric,catalogo_descripcion varchar2)
as 
begin 
update tipo_clase set descripcion = catalogo_descripcion 
where(ID_clase)=id_catalogo_in; 
end ACTUALIZACATALOGO;
/



CREATE SEQUENCE seq_id_revi START WITH 1
 INCREMENT BY 1 
NOMAXVALUE;


create or replace trigger revi_triger_auto
before insert on review
for each row
begin
select seq_id_revi.nextval
into:new.ID_REVIEW
from dual;
end;
/


CREATE TABLE review (
  id_review NUMERIC NOT NULL,
  c_lecciones_id_leccion NUMERIC NOT NULL,
  c_tipo_clase_id_clase NUMERIC NOT NULL,
  c_alumnos_id_alumno NUMERIC NOT NULL,
  c_id_calificacion NUMERIC NOT NULL,
  fecha DATE NOT NULL,
  PRIMARY KEY(id_review),
  FOREIGN KEY(c_alumnos_id_alumno, c_tipo_clase_id_clase, c_lecciones_id_leccion)
    REFERENCES calificaciones(alumnos_id_alumno, tipo_clase_id_clase, lecciones_id_leccion)
);


create or replace procedure insertar_review
(R_LECCION_ID NUMERIC,R_TIPO_CLASE NUMERIC,R_ALUMNO_ID NUMERIC,R_CALIFI NUMERIC,RFECHACALIF Date)
as
begin
      insert into REVIEW(C_LECCIONES_ID_LECCION,C_TIPO_CLASE_ID_CLASE,C_ALUMNOS_ID_ALUMNO,C_ID_CALIFICACION,FECHA) 
      values(R_LECCION_ID,R_TIPO_CLASE,R_ALUMNO_ID,R_CALIFI,RFECHACALIF);
end insertar_review;
/

CREATE TABLE horarioMaestro (
  fecha DATE NOT NULL,
  horaInicio NUMBER(2)  NOT NULL,
  horaFin NUMBER(2) NOT NULL,
  idhorarioMaestro NUMERIC NOT NULL,
  usuariosf_rfc VARCHAR2(50) NOT NULL,
  usuariosf_id_usuario NUMERIC NOT NULL,
  PRIMARY KEY(fecha, horaInicio,horaFin,usuariosf_id_usuario),
  FOREIGN KEY(usuariosf_id_usuario, usuariosf_rfc)
    REFERENCES usuarios(id_usuario, rfc)
);

CREATE SEQUENCE seq_id_horariom START WITH 1
 INCREMENT BY 1 
NOMAXVALUE; 

create or replace trigger horariom_triger_auto
before insert on horarioMaestro
for each row
begin
select seq_id_horariom.nextval
into:new.idhorarioMaestro
from dual;
end;
/

create or replace procedure insertar_horariom
(HMFECHACALIF Date, HMHORAI NUMERIC,HMHORAF NUMERIC,HMUSERRFC varchar2,HMUSERID numeric)
as
begin
      insert into horarioMaestro(FECHA,horaInicio,HORAFIN, USUARIOSF_RFC,USUARIOSF_ID_USUARIO) 
      values(HMFECHACALIF,HMHORAI,HMHORAF,HMUSERRFC,HMUSERID);
end insertar_horariom;
/

select next_day(sysdate,'lunes') from dual;

select next_day(sysdate,'domingo') from dual;
select  USUARIOSF_RFC from  horarioMaestro where to_char(fecha,'DD-MM')=to_char(sysdate+0,'DD-MM');


select USUARIOSF_ID_USUARIO,fecha,hora from horarioMaestro where fecha between '27/05/2021' and  next_day(sysdate,'domingo');
###NOOO AGREGAR####
########  ######
##### ###### #####